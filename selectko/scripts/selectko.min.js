!function(){var a=function(a,c){var d=this,e=function(a,b){return void 0===a?b:a};d.formFieldName=a.name||"items",d.optionsText=a.textField,d.optionsValue=a.valueField,d.newValueFormat=a.newValueFormat,d.isMultiple=e(a.isMultiple,!1),d.allowNew=e(a.allowNew,!0)&&d.isMultiple,d.placeholder=a.placeholder||"",d.hideSelected=e(a.hideSelected,!1),d.useStringInput=e(a.useStringInput,!1),d.hasAutocomplete=e(a.hasAutocomplete,!0)&&a.options,d.stringInputSeparator=a.stringInputSeparator||",",d.noResultsText=a.noResultsText||"No results found",d.allowClear=e(a.allowClear,!1),d.isAutocompleteVisible=ko.observable(!1),d.isAutocompleteBelow=ko.observable(!0),d.autocompleteIndex=ko.observable(0),d.optionInput=ko.observable(""),d.isFocused=ko.observable(!1);var f=[].concat(ko.unwrap(a.selected)||[]),g=ko.utils.arrayMap(ko.unwrap(a.options)||f,function(a){var c,e;return"object"==typeof a?(c=a[d.optionsText],e=a[d.optionsValue]):(c=a,e=a),new b(c,e)});d.options=ko.observableArray(g),d.selectedValues=ko.observableArray(ko.utils.arrayFilter(f,function(a){return d.findOptionBy("value",a)})),d.isMultiple||d.selectedValues()[0]||!d.options()[0]||d.selectedValues().push(d.options()[0].value),d.selectedOptions=ko.pureComputed(function(){return ko.utils.arrayMap(d.selectedValues(),function(a){return d.findOptionBy("value",a)})}),d.selectedSingleOption=ko.pureComputed(function(){return d.selectedOptions()[0]}),d.singleText=ko.pureComputed(function(){return(d.selectedSingleOption()||{}).text||d.placeholder}),d.singleValue=ko.pureComputed(function(){return(d.selectedSingleOption()||{}).value}),d.isSingleClearVisible=ko.pureComputed(function(){return d.allowClear&&d.singleValue()&&d.placeholder}),d.inputSize=ko.pureComputed(function(){return Math.max(""===d.optionInput()?d.inputPlaceholder().length:d.optionInput().length,1)+1}),d.inputPlaceholder=ko.pureComputed(function(){return 0===d.selectedValues().length?d.placeholder:""}),d.stringInputValue=ko.pureComputed(function(){return d.useStringInput?d.selectedValues().join(d.stringInputSeparator):""}),d.isNoResultsVisible=ko.pureComputed(function(){return!d.allowNew&&0===d.autocompleteOptions().length}),d.autocompleteOptions=ko.computed(function(){if(!d.hasAutocomplete)return[];var a=d.optionInput(),c=ko.utils.arrayFilter(d.options(),function(b){return(!d.hideSelected||!d.isSelected(b))&&b.text.indexOf(a)>=0});if(""!==a&&d.allowNew&&!e){var e=ko.utils.arrayFirst(c,function(b){return b.text===a});c.unshift(new b(a,d.makeNewValue(a),{isNew:!0,isPreview:!0}))}return c}),d.optionInput.subscribe(function(){d.showAutocomplete()}),d.isFocused.subscribe(function(a){a||(d.optionInput(""),d.hideAutocomplete())})};a.prototype.findOptionBy=function(a,b){return ko.utils.arrayFirst(this.options(),function(c){return c[a]===b})},a.prototype.makeNewValue=function(a){return this.newValueFormat?this.newValueFormat.replace("%value%",a):a},a.prototype.onKeyDown=function(b,c){var d=!1,e=c.keyCode?c.keyCode:c.which,f=a.KEYS;if(e===f.escape)this.hideAutocomplete();else if(e!==f.down||this.isAutocompleteVisible())if(e!==f.up&&e!==f.down||!this.isAutocompleteVisible())if(e===f.enter&&this.isAutocompleteVisible())this.selectAutocompleteOption();else if(e===f.tab||e===f.enter||e===f.comma&&!c.shiftKey)d=!this.addFromInput()&&e!==f.enter&&e!==f.comma;else if(this.isMultiple&&e===f.backspace&&""===this.optionInput()&&this.selectedValues().length>0){var i=this.findOptionBy("value",this.selectedValues().slice(-1)[0]);this.unselectOption(i)&&this.allowNew&&this.optionInput(i.text)}else d=!0;else{var g=this.autocompleteIndex()+(e===f.up?-1:1),h=this.autocompleteOptions().length;this.autocompleteIndex(g>=h?0:g<=-1?h-1:g)}else this.showAutocomplete();return d},a.prototype.selectAutocompleteOption=function(){var a=this.autocompleteOptions()[this.autocompleteIndex()];return!(!a||a.isPreview&&!this.allowNew)&&(a.isPreview=!1,this.selectOption(a))},a.prototype.addFromInput=function(){var a=this.optionInput().replace(/^\s+|\s+$/gm,"");if(""===a)return!1;var c=this.findOptionBy("text",a)||new b(a,this.makeNewValue(a),{isNew:!0});return this.selectOption(c)},a.prototype.isSelected=function(a){return this.selectedValues().indexOf(a.value)>=0},a.prototype.selectOption=function(a){return!(this.isSelected(a)||a.isNew&&!this.allowNew)&&(this.isMultiple||this.unselectOption(this.selectedSingleOption()),a.isNew&&this.options.push(a),this.selectedValues.push(a.value),this.optionInput(""),this.hideAutocomplete(),!0)},a.prototype.unselectOption=function(a){return!!a&&(this.selectedValues.remove(a.value),a.isNew&&this.options.remove(a),!0)},a.prototype.removeSelectedOption=function(a){this.unselectOption(a),this.showAutocomplete(),this.isFocused(!0)},a.prototype.hideAutocomplete=function(){this.isAutocompleteVisible(!1)},a.prototype.showAutocomplete=function(){if(this.hasAutocomplete){var a=this.autocompleteOptions();if(a.length>0){var b=0,c=this;if(a[0].isPreview&&a.length>1){var d=ko.utils.arrayFirst(a,function(a){return!a.isPreview&&!c.isSelected(a)});d&&(b=a.indexOf(d))}this.autocompleteIndex(b)}this.isAutocompleteVisible(a.length>0||this.isNoResultsVisible())}},a.prototype.toggleAutocomplete=function(){this.isAutocompleteVisible()?this.hideAutocomplete():(this.showAutocomplete(),this.isFocused(!0))},a.prototype.isStringInputEnabled=function(){return this.useStringInput||0===this.selectedValues().length},a.KEYS=a.KEYS||{up:38,down:40,enter:13,tab:9,backspace:8,escape:27,comma:188};var b=function(a,b,c){this.text=a,this.value=b,c=c||{},this.isNew=!!c.isNew,this.isPreview=!!c.isPreview};b.prototype.displayText=function(a){if(this.isPreview||!a)return this.text;var b=this.text.split(a);return b.join("<mark class='autocomplete-search'>"+a+"</mark>")},b.prototype.toString=function(){return this.text},ko.bindingHandlers.scrollIntoView={update:function(a,b){if(ko.unwrap(b())!==!1){var c=a.getBoundingClientRect(),d=a.offsetTop+c.height,e=a.parentNode,f=e.getBoundingClientRect(),g=f.height+e.scrollTop;a.offsetTop<e.scrollTop?e.scrollTop=a.offsetTop:d>g&&(e.scrollTop+=d-g)}}},ko.bindingHandlers.resetScrollTop={update:function(a,b){ko.unwrap(b())===!0&&(a.scrollTop=0)}},ko.bindingHandlers.setTopPosition={update:function(a,b,c,d,e){if(ko.unwrap(b())===!1)a.style.bottom=null;else{var f=a.getBoundingClientRect(),g=a.parentNode,h=e.$rawData;if(f.top+f.height<window.innerHeight)h.isAutocompleteBelow(!0);else{var i=getComputedStyle(g),j=parseFloat(i.getPropertyValue("border-top-width"))+parseFloat(i.getPropertyValue("border-bottom-width"));a.style.bottom=g.getBoundingClientRect().height-j+"px",h.isAutocompleteBelow(!1)}}}},ko.bindingHandlers.cancelMousedown={init:function(a,b,c,d,e){ko.unwrap(b())!==!1&&ko.applyBindingsToNode(a,{event:{mousedown:function(){}},mousedownBubble:!1},e)}},ko.bindingHandlers.autocompleteOption={init:function(a,b,c,d,e){var f=e.$parent,g=e.$data;ko.applyBindingAccessorsToNode(a,{css:function(){return{selected:f.isSelected(g),"new-option-preview":g.isPreview,highlight:b()}},scrollIntoView:function(){return b()},html:function(){return g.displayText(f.optionInput())}},e),ko.applyBindingsToNode(a,{event:{mouseup:f.selectAutocompleteOption.bind(f),mouseover:f.autocompleteIndex.bind(f,e.$index())},cancelMousedown:!0},e)}},ko.components.register("selectko",{viewModel:a,template:'      <div class="selectko-wrapper" data-bind="event: { mousedown: toggleAutocomplete }">        <select multiple data-bind="disable: isStringInputEnabled(), visible: false, attr: { name: formFieldName }, options: options, optionsText: \'text\', optionsValue:\'value\', selectedOptions: selectedValues"></select>        <input type="hidden" data-bind="enable: isStringInputEnabled(), attr: { name: formFieldName }, value: stringInputValue">      <!-- ko ifnot: isMultiple -->        <span class="single-text" data-bind="text: singleText, css: { placeholder: !singleValue() }"></span>        <span class="single-clear" data-bind="visible: isSingleClearVisible(), click: removeSelectedOption.bind($data, selectedSingleOption()), cancelMousedown: true">&times;</span>        <span class="single-arrow" data-bind="css: { \'arrow-up\': isAutocompleteVisible(), \'arrow-down\': !isAutocompleteVisible() }"></span>      <!-- /ko -->      <!-- ko if: isMultiple -->        <ul class="option-list">        <!-- ko foreach: selectedOptions -->          <li class="option">            <span data-bind="html: text"></span>            <a class="option-close" data-bind="click: $parent.removeSelectedOption.bind($parent, $data), cancelMousedown: true">&times;</a>          </li>        <!-- /ko -->          <li class="option-input">            <input type="text" tabindex="0" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"                   data-bind="textInput: optionInput, event: { keydown: onKeyDown }, hasFocus: isFocused, attr: { size: inputSize, placeholder: inputPlaceholder }">          </li>        </ul>      <!-- /ko -->        <div class="autocomplete-wrapper" data-bind="visible: isAutocompleteVisible, setTopPosition: isAutocompleteVisible, css: { \'autocomplete-below\': isAutocompleteBelow(), \'autocomplete-above\': !isAutocompleteBelow() }">        <!-- ko ifnot: isMultiple -->          <span class="single-input-wrapper">            <input type="text" tabindex="0" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"                   data-bind="textInput: optionInput, event: { keydown: onKeyDown }, cancelMousedown: true, hasFocus: isFocused">          </span>        <!-- /ko -->          <span class="no-results-message" data-bind="visible: isNoResultsVisible, text: noResultsText"></span>          <ul class="autocomplete" data-bind="foreach: autocompleteOptions, resetScrollTop: isAutocompleteVisible">            <li data-bind="autocompleteOption: $index() === $parent.autocompleteIndex()"></li>          </ul>        </div>      </div>    '})}();